
      1: Executing main
/* Computes factorials:  tests method calls, if, while, assignment */
      2: public /* Using Class-Supplied Parser */ 
 class fact {
      3: 
      4:    public static int factorial(int x) {
      5:       if (x==0) return 1;
      6:       else return x * fact::factorial : int (x-1);
      7:    }
      8:    public static void main431() {
      9:      int i;
     10:      i = 0;
     11:      fact::outStrln : void (");
     12:      while ( i < 10) {
     13:         int gobble;
     14:         gobble = fact::computeFactorial : int (i);
     15:         i = i + 1;
     16:      }
     17:    }
     18: }
     19: 
Raw AST (with node numbers)
68: TemporaryNode[NodeDumpable]  "Program"
  67: ClassNode[ASTNodeIsh, NodeDumpable, SymDeclaring, ClassDeclaring]  "Class public instance fact"
    66: ClassBody[ASTNodeIsh, ClassIsh, NodeDumpable]  "Class Body"
      61: TemporaryNode[NodeDumpable]  "Fields"
      62: TemporaryNode[NodeDumpable]  "Constructors"
      63: TemporaryNode[NodeDumpable]  "Methods"
        23: ModTypeNode[NodeDumpable]  "I"
          3: MethodNode[ASTNodeIsh, NodeDumpable, SymDeclaring, MethodDeclaring]  "public static I factorial"
            2: ParamsNode[ASTNodeIsh, NodeDumpable, ParamIsh]  "PARAMS"
              1: ParamNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Param I x"
            22: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
              21: IfNode[ASTNodeIsh, IfIsh, NodeDumpable]  "If"
                6: EqNode[ASTNodeIsh, CompareIsh, BoolTypeProducing, NodeDumpable]  ""
                  4: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x"
                  5: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 0"
                8: ReturnValueNode[ComputeIsh, UnaryComputeIsh, NodeDumpable]  "op return"
                  7: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
                20: ReturnValueNode[ComputeIsh, UnaryComputeIsh, NodeDumpable]  "op return"
                  19: MpyNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                    9: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x"
                    18: InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                      10: StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                        11: TypeNode[NodeDumpable]  "Lfact;"
                        12: TemporaryNode[NodeDumpable]  "factorial"
                        13: TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                      17: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                        16: SubNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                          14: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x"
                          15: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
        60: ModTypeNode[NodeDumpable]  "V"
          25: MethodNode[ASTNodeIsh, NodeDumpable, SymDeclaring, MethodDeclaring]  "public static V main431"
            24: ParamsNode[ASTNodeIsh, NodeDumpable, ParamIsh]  "PARAMS"
            59: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
              27: TypeNode[NodeDumpable]  "I"
                26: LocalNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Local I i"
              30: AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                28: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i"
                29: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 0"
              37: InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                31: StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                  32: TypeNode[NodeDumpable]  "Lfact;"
                  33: TemporaryNode[NodeDumpable]  "outStrln"
                  34: TypeAssertingNode[TypeAsserting, NodeDumpable]  "V"
                36: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                  35: StringNode[StringTypeProducing, ConstantProducing, ASTNodeIsh, ConstantString, NodeDumpable]  "String CS431 fact test"
              58: WhileNode[WhileIsh, ASTNodeIsh, NodeDumpable]  "WHILE"
                40: LessNode[ASTNodeIsh, CompareIsh, BoolTypeProducing, NodeDumpable]  ""
                  38: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i"
                  39: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 10"
                57: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
                  42: TypeNode[NodeDumpable]  "I"
                    41: LocalNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Local I gobble"
                  51: AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                    43: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref gobble"
                    50: InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                      44: StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                        45: TypeNode[NodeDumpable]  "Lfact;"
                        46: TemporaryNode[NodeDumpable]  "computeFactorial"
                        47: TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                      49: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                        48: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i"
                  56: AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                    52: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i"
                    55: AddNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                      53: RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i"
                      54: IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
      64: TemporaryNode[NodeDumpable]  "Statics"
      65: TemporaryNode[NodeDumpable]  "Inner Classes"
Building Symbol table
Type Setting pass

Raw AST (with node numbers)
68: TemporaryNode[NodeDumpable]  "Program"
  67: ClassNode[ASTNodeIsh, NodeDumpable, SymDeclaring, ClassDeclaring]  "Class public instance fact"
    66: ClassBody[ASTNodeIsh, ClassIsh, NodeDumpable]  "Class Body"
      61: TemporaryNode[NodeDumpable]  "Fields"
      62: TemporaryNode[NodeDumpable]  "Constructors"
      63: TemporaryNode[NodeDumpable]  "Methods"
        23: ModTypeNode[NodeDumpable]  "I"
          3: MethodNode[ASTNodeIsh, NodeDumpable, SymDeclaring, MethodDeclaring]  "public static I factorial"
            2: ParamsNode[ASTNodeIsh, NodeDumpable, ParamIsh]  "PARAMS"
              1: ParamNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Param I x"
            22: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
              21: IfNode[ASTNodeIsh, IfIsh, NodeDumpable]  "If"
                6: <Z> EqNode[ASTNodeIsh, CompareIsh, BoolTypeProducing, NodeDumpable]  ""
                  4: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x1: type I mods null reg -1"
                  5: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 0"
                8: <I> ReturnValueNode[ComputeIsh, UnaryComputeIsh, NodeDumpable]  "op return"
                  7: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
                20: <I> ReturnValueNode[ComputeIsh, UnaryComputeIsh, NodeDumpable]  "op return"
                  19: <I> MpyNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                    9: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x1: type I mods null reg -1"
                    18: <I> InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                      10: <I> StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                        11: TypeNode[NodeDumpable]  "Lfact;"
                        12: TemporaryNode[NodeDumpable]  "factorial"
                        13: <I> TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                      17: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                        16: <I> SubNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                          14: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref x1: type I mods null reg -1"
                          15: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
        60: ModTypeNode[NodeDumpable]  "V"
          25: MethodNode[ASTNodeIsh, NodeDumpable, SymDeclaring, MethodDeclaring]  "public static V main431"
            24: ParamsNode[ASTNodeIsh, NodeDumpable, ParamIsh]  "PARAMS"
            59: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
              27: TypeNode[NodeDumpable]  "I"
                26: LocalNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Local I i"
              30: <I> AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                28: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i26: type I mods null reg -1"
                29: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 0"
              37: <V> InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                31: <V> StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                  32: TypeNode[NodeDumpable]  "Lfact;"
                  33: TemporaryNode[NodeDumpable]  "outStrln"
                  34: <V> TypeAssertingNode[TypeAsserting, NodeDumpable]  "V"
                36: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                  35: <Ljava/lang/String;> StringNode[StringTypeProducing, ConstantProducing, ASTNodeIsh, ConstantString, NodeDumpable]  "String CS431 fact test"
              58: WhileNode[WhileIsh, ASTNodeIsh, NodeDumpable]  "WHILE"
                40: <Z> LessNode[ASTNodeIsh, CompareIsh, BoolTypeProducing, NodeDumpable]  ""
                  38: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i26: type I mods null reg -1"
                  39: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 10"
                57: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
                  42: TypeNode[NodeDumpable]  "I"
                    41: LocalNode[ASTNodeIsh, NodeDumpable, SymDeclaring, LocalDeclaring]  "Local I gobble"
                  51: <I> AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                    43: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref gobble41: type I mods null reg -1"
                    50: <I> InvokeNode[ASTNodeIsh, InvokeIsh, NodeDumpable]  ""
                      44: <I> StaticReference[FieldReferencing, ASTNodeIsh, InvokeReference, Referencing, NodeDumpable, StaticReferencing]  ""
                        45: TypeNode[NodeDumpable]  "Lfact;"
                        46: TemporaryNode[NodeDumpable]  "computeFactorial"
                        47: <I> TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                      49: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
                        48: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i26: type I mods null reg -1"
                  56: <I> AssignNode[AssignIsh, NodeDumpable, AssignTypeRequiring]  "Assign"
                    52: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i26: type I mods null reg -1"
                    55: <I> AddNode[ComputeIsh, NodeDumpable, BinaryComputeIsh]  ""
                      53: <I> RefNode[LocalReferencing, Referencing, NodeDumpable]  "Local Ref i26: type I mods null reg -1"
                      54: <I> IntNode[ConstantProducing, ASTNodeIsh, ConstantInt, IntTypeProducing, NodeDumpable]  "Int 1"
      64: TemporaryNode[NodeDumpable]  "Statics"
      65: TemporaryNode[NodeDumpable]  "Inner Classes"
Code Generation
Ignoring 68: TemporaryNode[NodeDumpable]  "Program"
    Ignoring 66: ClassBody[ASTNodeIsh, ClassIsh, NodeDumpable]  "Class Body"
      Ignoring 61: TemporaryNode[NodeDumpable]  "Fields"
      Ignoring 62: TemporaryNode[NodeDumpable]  "Constructors"
      Ignoring 63: TemporaryNode[NodeDumpable]  "Methods"
        Ignoring 23: ModTypeNode[NodeDumpable]  "I"
In InvokeIsh node
                      Ignoring 11: TypeNode[NodeDumpable]  "Lfact;"
                      Ignoring 12: TemporaryNode[NodeDumpable]  "factorial"
                      Ignoring 13: <I> TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                    Ignoring 17: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
Before get child in invokish
After get child in invokish
Before first if else block
Inside else
after args get child
typecheck
After first if else block
About to hit if else in invokish
        Ignoring 60: ModTypeNode[NodeDumpable]  "V"
            Ignoring 27: TypeNode[NodeDumpable]  "I"
In LocalDeclaring
Name is: i
Assigned i to Register 0
In assign node
In InvokeIsh node
                Ignoring 32: TypeNode[NodeDumpable]  "Lfact;"
                Ignoring 33: TemporaryNode[NodeDumpable]  "outStrln"
                Ignoring 34: <V> TypeAssertingNode[TypeAsserting, NodeDumpable]  "V"
              Ignoring 36: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
Before get child in invokish
After get child in invokish
Before first if else block
Inside else if
After first if else block
About to hit if else in invokish
              Ignoring 57: BlockNode[ASTNodeIsh, NodeDumpable, BlockIsh]  "BLOCK"
                Ignoring 42: TypeNode[NodeDumpable]  "I"
In LocalDeclaring
Name is: gobble
Assigned gobble to Register 2
In assign node
In InvokeIsh node
                      Ignoring 45: TypeNode[NodeDumpable]  "Lfact;"
                      Ignoring 46: TemporaryNode[NodeDumpable]  "computeFactorial"
                      Ignoring 47: <I> TypeAssertingNode[TypeAsserting, NodeDumpable]  "I"
                    Ignoring 49: ArgsNode[ASTNodeIsh, ArgIsh, NodeDumpable]  "ARGS"
Before get child in invokish
After get child in invokish
Before first if else block
Inside if
After first if else block
About to hit if else in invokish
In assign node
      Ignoring 64: TemporaryNode[NodeDumpable]  "Statics"
      Ignoring 65: TemporaryNode[NodeDumpable]  "Inner Classes"
